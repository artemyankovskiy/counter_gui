<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UsersPermissions', 'doctrine');

/**
 * BaseUsersPermissions
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $object_id
 * @property integer $uid
 * @property integer $gid
 * @property integer $user_read_perm
 * @property integer $user_write_perm
 * @property integer $user_exec_perm
 * @property integer $group_read_perm
 * @property integer $group_write_perm
 * @property integer $group_exec_perm
 * @property Objects $Objects
 * @property UsersGroup $UsersGroup
 * @property UsersPasswd $UsersPasswd
 * 
 * @method integer          getId()               Returns the current record's "id" value
 * @method integer          getObjectId()         Returns the current record's "object_id" value
 * @method integer          getUid()              Returns the current record's "uid" value
 * @method integer          getGid()              Returns the current record's "gid" value
 * @method integer          getUserReadPerm()     Returns the current record's "user_read_perm" value
 * @method integer          getUserWritePerm()    Returns the current record's "user_write_perm" value
 * @method integer          getUserExecPerm()     Returns the current record's "user_exec_perm" value
 * @method integer          getGroupReadPerm()    Returns the current record's "group_read_perm" value
 * @method integer          getGroupWritePerm()   Returns the current record's "group_write_perm" value
 * @method integer          getGroupExecPerm()    Returns the current record's "group_exec_perm" value
 * @method Objects          getObjects()          Returns the current record's "Objects" value
 * @method UsersGroup       getUsersGroup()       Returns the current record's "UsersGroup" value
 * @method UsersPasswd      getUsersPasswd()      Returns the current record's "UsersPasswd" value
 * @method UsersPermissions setId()               Sets the current record's "id" value
 * @method UsersPermissions setObjectId()         Sets the current record's "object_id" value
 * @method UsersPermissions setUid()              Sets the current record's "uid" value
 * @method UsersPermissions setGid()              Sets the current record's "gid" value
 * @method UsersPermissions setUserReadPerm()     Sets the current record's "user_read_perm" value
 * @method UsersPermissions setUserWritePerm()    Sets the current record's "user_write_perm" value
 * @method UsersPermissions setUserExecPerm()     Sets the current record's "user_exec_perm" value
 * @method UsersPermissions setGroupReadPerm()    Sets the current record's "group_read_perm" value
 * @method UsersPermissions setGroupWritePerm()   Sets the current record's "group_write_perm" value
 * @method UsersPermissions setGroupExecPerm()    Sets the current record's "group_exec_perm" value
 * @method UsersPermissions setObjects()          Sets the current record's "Objects" value
 * @method UsersPermissions setUsersGroup()       Sets the current record's "UsersGroup" value
 * @method UsersPermissions setUsersPasswd()      Sets the current record's "UsersPasswd" value
 * 
 * @package    gui
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsersPermissions extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users_permissions');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('object_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('uid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_read_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('user_write_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('user_exec_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('group_read_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('group_write_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('group_exec_perm', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Objects', array(
             'local' => 'object_id',
             'foreign' => 'object_id'));

        $this->hasOne('UsersGroup', array(
             'local' => 'gid',
             'foreign' => 'gid'));

        $this->hasOne('UsersPasswd', array(
             'local' => 'uid',
             'foreign' => 'uid'));
    }
}